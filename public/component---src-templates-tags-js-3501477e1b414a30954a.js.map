{"version":3,"sources":["webpack:///./src/templates/tags.js"],"names":["TagRoute","render","postLinks","this","props","data","allMarkdownRemark","edges","map","post","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","key","node","fields","slug","gatsby__WEBPACK_IMPORTED_MODULE_4__","Link","to","className","frontmatter","title","tag","pageContext","site","siteMetadata","totalCount","tagHeader","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","style","marginBottom","t","Component","__webpack_exports__","default","u","tagPageQuery"],"mappings":"2NAKMA,4FACJC,kBACE,IACMC,EADQC,KAAKC,MAAMC,KAAKC,kBAAkBC,MACxBC,IAAI,SAAAC,GAAA,OAC1BC,EAAAC,EAAAC,cAAA,MAAIC,IAAKJ,EAAKK,KAAKC,OAAOC,MACxBN,EAAAC,EAAAC,cAACK,EAAAC,MAAKC,GAAIV,EAAKK,KAAKC,OAAOC,MACzBN,EAAAC,EAAAC,cAAA,MAAIQ,UAAU,aAAaX,EAAKK,KAAKO,YAAYC,WAIjDC,EAAMpB,KAAKC,MAAMoB,YAAYD,IAC7BD,EAAQnB,KAAKC,MAAMC,KAAKoB,KAAKC,aAAaJ,MAC1CK,EAAaxB,KAAKC,MAAMC,KAAKC,kBAAkBqB,WAC/CC,EAAeD,EAAf,SACW,IAAfA,EAAmB,GAAK,KADpB,iBAEWJ,EAFX,IAIN,OACEb,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,KACED,EAAAC,EAAAC,cAAA,WAASQ,UAAU,WACjBV,EAAAC,EAAAC,cAACkB,EAAAnB,GAAOW,MAAUC,EAAV,MAAmBD,IAC3BZ,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,qBACbV,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,WACbV,EAAAC,EAAAC,cAAA,OACEQ,UAAU,2BACVW,OAASC,aAAc,SAEvBtB,EAAAC,EAAAC,cAAA,MAAIQ,UAAU,iCAAiCQ,GAC/ClB,EAAAC,EAAAC,cAAA,MAAIQ,UAAU,WAAWlB,GACzBQ,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACK,EAAAC,MAAKC,GAAG,UAAT,0BAAAc,EA9BZjC,CAAiBU,EAAAC,EAAMuB,WAyC7BC,EAAAC,QAAAC,EAEO,IAAMC","file":"component---src-templates-tags-js-3501477e1b414a30954a.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/Layout'\n\nclass TagRoute extends React.Component {\n  render() {\n    const posts = this.props.data.allMarkdownRemark.edges\n    const postLinks = posts.map(post => (\n      <li key={post.node.fields.slug}>\n        <Link to={post.node.fields.slug}>\n          <h2 className=\"is-size-2\">{post.node.frontmatter.title}</h2>\n        </Link>\n      </li>\n    ))\n    const tag = this.props.pageContext.tag\n    const title = this.props.data.site.siteMetadata.title\n    const totalCount = this.props.data.allMarkdownRemark.totalCount\n    const tagHeader = `${totalCount} post${\n      totalCount === 1 ? '' : 's'\n    } tagged with “${tag}”`\n\n    return (\n      <Layout>\n        <section className=\"section\">\n          <Helmet title={`${tag} | ${title}`} />\n          <div className=\"container content\">\n            <div className=\"columns\">\n              <div\n                className=\"column is-10 is-offset-1\"\n                style={{ marginBottom: '6rem' }}\n              >\n                <h3 className=\"title is-size-4 is-bold-light\">{tagHeader}</h3>\n                <ul className=\"taglist\">{postLinks}</ul>\n                <p>\n                  <Link to=\"/tags/\">Browse all tags</Link>\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n      </Layout>\n    )\n  }\n}\n\nexport default TagRoute\n\nexport const tagPageQuery = graphql`\n  query TagPage($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}