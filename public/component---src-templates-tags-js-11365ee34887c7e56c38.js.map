{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["TagRoute","render","postLinks","this","props","data","allMarkdownRemark","edges","map","post","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","key","node","fields","slug","gatsby__WEBPACK_IMPORTED_MODULE_4__","Link","to","className","frontmatter","title","tag","pathContext","site","siteMetadata","totalCount","tagHeader","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","style","marginBottom","t","Component","__webpack_exports__","default","l","tagPageQuery","m","module","exports","__webpack_require__","StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_0___default","createContext","StaticQuery","Consumer","staticQueryData","query","children","graphql","Error","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","shape","c"],"mappings":"mNAIMA,4FACJC,kBACE,IACMC,EADQC,KAAKC,MAAMC,KAAKC,kBAAkBC,MACxBC,IAAI,SAAAC,GAAA,OAC1BC,EAAAC,EAAAC,cAAA,MAAIC,IAAKJ,EAAKK,KAAKC,OAAOC,MACxBN,EAAAC,EAAAC,cAACK,EAAAC,MAAKC,GAAIV,EAAKK,KAAKC,OAAOC,MACzBN,EAAAC,EAAAC,cAAA,MAAIQ,UAAU,aAAaX,EAAKK,KAAKO,YAAYC,WAIjDC,EAAMpB,KAAKC,MAAMoB,YAAYD,IAC7BD,EAAQnB,KAAKC,MAAMC,KAAKoB,KAAKC,aAAaJ,MAC1CK,EAAaxB,KAAKC,MAAMC,KAAKC,kBAAkBqB,WAC/CC,EAAeD,EAAf,SACW,IAAfA,EAAmB,GAAK,KADpB,iBAEWJ,EAFX,IAIN,OACEb,EAAAC,EAAAC,cAAA,WAASQ,UAAU,WACjBV,EAAAC,EAAAC,cAACiB,EAAAlB,GAAOW,MAAUC,EAAV,MAAmBD,IAC3BZ,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,qBACbV,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,WACbV,EAAAC,EAAAC,cAAA,OACEQ,UAAU,2BACVU,OAASC,aAAc,SAEvBrB,EAAAC,EAAAC,cAAA,MAAIQ,UAAU,iCAAiCQ,GAC/ClB,EAAAC,EAAAC,cAAA,MAAIQ,UAAU,WAAWlB,GACzBQ,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACK,EAAAC,MAAKC,GAAG,UAAT,yBAAAa,EA7BVhC,CAAiBU,EAAAC,EAAMsB,WAuC7BC,EAAAC,QAAAC,EAEO,IAAMC,oCC7Cb,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAA,OALAH,EAAEH,SAAYG,+mBCY/C,IAAMI,EAAqBC,EAAAhC,EAAMiC,kBAE3BC,EAAc,SAAAzC,GAAA,OAClBuC,EAAAhC,EAAAC,cAAC8B,EAAmBI,SAApB,KACG,SAAAC,GACC,OACE3C,EAAMC,MACL0C,EAAgB3C,EAAM4C,QAAUD,EAAgB3C,EAAM4C,OAAO3C,MAEtDD,EAAMH,QAAUG,EAAM6C,UAC5B7C,EAAMC,KAAOD,EAAMC,KAAKA,KAAO0C,EAAgB3C,EAAM4C,OAAO3C,MAGvDsC,EAAAhC,EAAAC,cAAA,uCAaf,SAASsC,IACP,MAAM,IAAIC,MACR,gVATJN,EAAYO,WACV/C,KAAMgD,EAAA1C,EAAU2C,OAChBN,MAAOK,EAAA1C,EAAU4C,OAAOC,WACxBvD,OAAQoD,EAAA1C,EAAU8C,KAClBR,SAAUI,EAAA1C,EAAU8C,mGC7BhBC,EAAmB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACpBC,EAAgBC,EAAAnD,EAAOoD,wBAAwBH,EAASI,UAC9D,OAAOrB,EAAAhC,EAAMC,cAAcqD,EAAAtD,GACzBiD,WACAC,mBAIJH,EAAiBN,WACfQ,SAAUP,EAAA1C,EAAUuD,OAClBF,SAAUX,EAAA1C,EAAU4C,OAAOC,aAC1BA,YAGLtB,EAAAC,QAAAgC","file":"component---src-templates-tags-js-11365ee34887c7e56c38.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport {Link, graphql} from 'gatsby'\n\nclass TagRoute extends React.Component {\n  render() {\n    const posts = this.props.data.allMarkdownRemark.edges\n    const postLinks = posts.map(post => (\n      <li key={post.node.fields.slug}>\n        <Link to={post.node.fields.slug}>\n          <h2 className=\"is-size-2\">{post.node.frontmatter.title}</h2>\n        </Link>\n      </li>\n    ))\n    const tag = this.props.pathContext.tag\n    const title = this.props.data.site.siteMetadata.title\n    const totalCount = this.props.data.allMarkdownRemark.totalCount\n    const tagHeader = `${totalCount} post${\n      totalCount === 1 ? '' : 's'\n    } tagged with “${tag}”`\n\n    return (\n      <section className=\"section\">\n        <Helmet title={`${tag} | ${title}`} />\n        <div className=\"container content\">\n          <div className=\"columns\">\n            <div\n              className=\"column is-10 is-offset-1\"\n              style={{ marginBottom: '6rem' }}\n            >\n              <h3 className=\"title is-size-4 is-bold-light\">{tagHeader}</h3>\n              <ul className=\"taglist\">{postLinks}</ul>\n              <p>\n                <Link to=\"/tags/\">Browse all tags</Link>\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default TagRoute\n\nexport const tagPageQuery = graphql`\n  query TagPage($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.NODE_ENV !== `production`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}