{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Content.js"],"names":["BlogPostTemplate","_ref","content","contentComponent","description","tags","title","helmet","PostContent","_components_Content__WEBPACK_IMPORTED_MODULE_6__","b","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","length","style","marginTop","map","tag","key","gatsby__WEBPACK_IMPORTED_MODULE_5__","Link","to","Object","lodash__WEBPACK_IMPORTED_MODULE_3__","kebabCase","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_2___default","string","isRequired","func","instanceOf","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","BlogPost","_ref2","post","data","markdownRemark","html","frontmatter","shape","object","pageQuery","m","module","exports","__webpack_require__","default","StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_0___default","createContext","StaticQuery","props","Consumer","staticQueryData","query","render","children","graphql","Error","prop_types__WEBPACK_IMPORTED_MODULE_1___default","ProdPageRenderer","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","__webpack_exports__","u","214","e","t","n","d","c","r","i","o","HTMLContent","dangerouslySetInnerHTML","__html","Content","s"],"mappings":"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","file":"component---src-templates-blog-post-js-207a5ba0e84a86facb56.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { kebabCase } from 'lodash'\nimport Helmet from 'react-helmet'\nimport {Link, graphql} from 'gatsby'\nimport Content, { HTMLContent } from '../components/Content'\n\nexport const BlogPostTemplate = ({\n  content,\n  contentComponent,\n  description,\n  tags,\n  title,\n  helmet,\n}) => {\n  const PostContent = contentComponent || Content\n\n  return (\n    <section className=\"section\">\n      {helmet || ''}\n      <div className=\"container content\">\n        <div className=\"columns\">\n          <div className=\"column is-10 is-offset-1\">\n            <h1 className=\"title is-size-2 has-text-weight-bold is-bold-light\">\n              {title}\n            </h1>\n            <p>{description}</p>\n            <PostContent content={content} />\n            {tags && tags.length ? (\n              <div style={{ marginTop: `4rem` }}>\n                <h4>Tags</h4>\n                <ul className=\"taglist\">\n                  {tags.map(tag => (\n                    <li key={tag + `tag`}>\n                      <Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nBlogPostTemplate.propTypes = {\n  content: PropTypes.string.isRequired,\n  contentComponent: PropTypes.func,\n  description: PropTypes.string,\n  title: PropTypes.string,\n  helmet: PropTypes.instanceOf(Helmet),\n}\n\nconst BlogPost = ({ data }) => {\n  const { markdownRemark: post } = data\n\n  return (\n    <BlogPostTemplate\n      content={post.html}\n      contentComponent={HTMLContent}\n      description={post.frontmatter.description}\n      helmet={<Helmet title={`${post.frontmatter.title} | Blog`} />}\n      tags={post.frontmatter.tags}\n      title={post.frontmatter.title}\n    />\n  )\n}\n\nBlogPost.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.object,\n  }),\n}\n\nexport default BlogPost\n\nexport const pageQuery = graphql`\n  query BlogPostByID($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        description\n        tags\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.NODE_ENV !== `production`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport const HTMLContent = ({ content, className }) => (\n  <div className={className} dangerouslySetInnerHTML={{ __html: content }} />\n)\n\nconst Content = ({ content, className }) => (\n  <div className={className}>{content}</div>\n)\n\nContent.propTypes = {\n  content: PropTypes.string,\n  className: PropTypes.string,\n}\n\nHTMLContent.propTypes = Content.propTypes\n\nexport default Content\n"],"sourceRoot":""}